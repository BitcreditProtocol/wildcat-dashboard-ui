{
  "openapi": "3.0.3",
  "info": {
    "title": "wildcat",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/v1/admin/credit/quote/{id}": {
      "get": {
        "tags": [
          "crate::credit::admin"
        ],
        "operationId": "admin_lookup_quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The quote id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoReply"
                }
              }
            }
          },
          "404": {
            "description": "Quote id not  found"
          }
        }
      },
      "post": {
        "tags": [
          "crate::credit::admin"
        ],
        "operationId": "resolve_quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The quote id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Succesful response"
          }
        }
      }
    },
    "/v1/admin/credit/quote/accepted": {
      "get": {
        "tags": [
          "crate::credit::admin"
        ],
        "operationId": "list_accepted_quotes",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "only accepted quotes younger than `since`",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListReply"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/credit/quote/pending": {
      "get": {
        "tags": [
          "crate::credit::admin"
        ],
        "summary": "--------------------------- List quotes",
        "operationId": "list_pending_quotes",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "description": "only quote requests younger than `since`",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListReply"
                }
              }
            }
          }
        }
      }
    },
    "/v1/credit/mint/quote": {
      "post": {
        "tags": [
          "crate::credit::web"
        ],
        "summary": "--------------------------- Enquire mint quote",
        "operationId": "enquire_quote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnquireRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Quote request admitted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnquireReply"
                }
              }
            }
          },
          "404": {
            "description": "Quote request not accepted"
          }
        }
      }
    },
    "/v1/credit/mint/quote/{id}": {
      "get": {
        "tags": [
          "crate::credit::web"
        ],
        "operationId": "lookup_quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The quote id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusReply"
                }
              }
            }
          },
          "404": {
            "description": "Quote id not  found"
          }
        }
      }
    },
    "/v1/credit/quote/{id}": {
      "post": {
        "tags": [
          "crate::credit::web"
        ],
        "operationId": "resolve_offer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The quote id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Resolve"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Succesful response"
          },
          "404": {
            "description": "Quote not found"
          },
          "409": {
            "description": "Quote already resolved"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Id": {
        "type": "string",
        "format": "uuid",
        "description": "Manually added - should be replaced with generated one"
      },
      "BlindSignatureDleq": {
        "type": "string",
        "description": "Manually added - should be replaced with generated one"
      },
      "Witness": {
        "type": "string",
        "description": "Manually added - should be replaced with generated one"
      },
      "TStamp": {
        "type": "integer",
        "format": "int64",
        "description": "Manually added - should be replaced with generated one",
        "minimum": 0
      },
      "Resolve": {
        "type": "integer",
        "format": "int64",
        "description": "Manually added - should be replaced with generated one",
        "minimum": 0
      },
      "Amount": {
        "type": "integer",
        "format": "int64",
        "description": "Amount can be any unit",
        "minimum": 0
      },
      "BlindSignature": {
        "type": "object",
        "description": "Blind Signature (also called `promise`)",
        "required": [
          "amount",
          "id",
          "C_"
        ],
        "properties": {
          "C_": {
            "type": "string",
            "description": "Blinded signature (C_)\n\nThe blinded signature on the secret message `B_` of [BlindedMessage]."
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "dleq": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BlindSignatureDleq"
              }
            ],
            "nullable": true
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "BlindedMessage": {
        "type": "object",
        "description": "Blinded Message (also called `output`)",
        "required": [
          "amount",
          "id",
          "B_"
        ],
        "properties": {
          "B_": {
            "type": "string",
            "description": "Blinded secret message (B_)\n\nThe blinded secret message generated by the sender."
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "witness": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Witness"
              }
            ],
            "nullable": true
          }
        }
      },
      "EnquireReply": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EnquireRequest": {
        "type": "object",
        "description": "--------------------------- Enquire mint quote",
        "required": [
          "bill",
          "node",
          "outputs"
        ],
        "properties": {
          "bill": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlindedMessage"
            }
          }
        }
      },
      "InfoReply": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "id",
              "bill",
              "endorser",
              "submitted",
              "suggested_expiration",
              "status"
            ],
            "properties": {
              "bill": {
                "type": "string"
              },
              "endorser": {
                "type": "string"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending"
                ]
              },
              "submitted": {
                "type": "string",
                "format": "date-time"
              },
              "suggested_expiration": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "bill",
              "endorser",
              "ttl",
              "signatures",
              "status"
            ],
            "properties": {
              "bill": {
                "type": "string"
              },
              "endorser": {
                "type": "string"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "signatures": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlindSignature"
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "offered"
                ]
              },
              "ttl": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "bill",
              "endorser",
              "status"
            ],
            "properties": {
              "bill": {
                "type": "string"
              },
              "endorser": {
                "type": "string"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string",
                "enum": [
                  "denied"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "bill",
              "endorser",
              "signatures",
              "status"
            ],
            "properties": {
              "bill": {
                "type": "string"
              },
              "endorser": {
                "type": "string"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "signatures": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlindSignature"
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "accepted"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "bill",
              "endorser",
              "tstamp",
              "status"
            ],
            "properties": {
              "bill": {
                "type": "string"
              },
              "endorser": {
                "type": "string"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string",
                "enum": [
                  "rejected"
                ]
              },
              "tstamp": {
                "$ref": "#/components/schemas/TStamp"
              }
            }
          }
        ],
        "description": "--------------------------- Quote info request",
        "discriminator": {
          "propertyName": "status"
        }
      },
      "ListReply": {
        "type": "object",
        "description": "--------------------------- List quotes",
        "required": [
          "quotes"
        ],
        "properties": {
          "quotes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ResolveOffer": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "action"
            ],
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "reject"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "action"
            ],
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "accept"
                ]
              }
            }
          }
        ],
        "description": "--------------------------- Resolve quote"
      },
      "ResolveRequest": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "action"
            ],
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "deny"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "discount",
              "action"
            ],
            "properties": {
              "action": {
                "type": "string",
                "enum": [
                  "offer"
                ]
              },
              "discount": {
                "type": "string"
              },
              "ttl": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "description": "--------------------------- Resolve quote request",
        "discriminator": {
          "propertyName": "action"
        }
      },
      "StatusReply": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "pending"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "denied"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "signatures",
              "expiration_date",
              "status"
            ],
            "properties": {
              "expiration_date": {
                "$ref": "#/components/schemas/TStamp"
              },
              "signatures": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlindSignature"
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "offered"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "signatures",
              "status"
            ],
            "properties": {
              "signatures": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BlindSignature"
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "accepted"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "tstamp",
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "rejected"
                ]
              },
              "tstamp": {
                "$ref": "#/components/schemas/TStamp"
              }
            }
          }
        ],
        "description": "--------------------------- Look up quote",
        "discriminator": {
          "propertyName": "status"
        }
      }
    }
  }
}