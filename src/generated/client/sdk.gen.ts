// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { ListQuotesData, ListQuotesResponse, ListPendingQuotesData, ListPendingQuotesResponse, AdminLookupQuoteData, AdminLookupQuoteResponse, AdminUpdateQuoteData, AdminUpdateQuoteResponse, ResolveOfferData, EnquireQuoteData, EnquireQuoteResponse, LookupQuoteData, LookupQuoteResponse, ActivateKeysetData, ActivateKeysetResponse, DebitData, CreditData, ECashBalance, OnChainBalanceData, OnChainData, KeysetInfoData, KeySetInfo} from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const listQuotes = <ThrowOnError extends boolean = false>(options?: Options<ListQuotesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListQuotesResponse, unknown, ThrowOnError>({
        url: '/v1/admin/credit/quote',
        ...options
    });
};

/**
 * --------------------------- List quotes
 */
export const listPendingQuotes = <ThrowOnError extends boolean = false>(options?: Options<ListPendingQuotesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListPendingQuotesResponse, unknown, ThrowOnError>({
        url: '/v1/admin/credit/quote/pending',
        ...options
    });
};

export const adminLookupQuote = <ThrowOnError extends boolean = false>(options: Options<AdminLookupQuoteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<AdminLookupQuoteResponse, unknown, ThrowOnError>({
        url: '/v1/admin/credit/quote/{id}',
        ...options
    });
};

export const adminUpdateQuote = <ThrowOnError extends boolean = false>(options: Options<AdminUpdateQuoteData, ThrowOnError>) => {
    console.log('Update Quote Payload:', options);
    return (options.client ?? _heyApiClient).post<AdminUpdateQuoteResponse, unknown, ThrowOnError>({
        url: '/v1/admin/credit/quote/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const resolveOffer = <ThrowOnError extends boolean = false>(options: Options<ResolveOfferData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
        url: '/v1/credit/quote/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * --------------------------- Enquire mint quote
 */
export const enquireQuote = <ThrowOnError extends boolean = false>(options: Options<EnquireQuoteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<EnquireQuoteResponse, unknown, ThrowOnError>({
        url: '/v1/mint/credit/quote',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const lookupQuote = <ThrowOnError extends boolean = false>(options: Options<LookupQuoteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<LookupQuoteResponse, unknown, ThrowOnError>({
        url: '/v1/mint/credit/quote/{id}',
        ...options
    });
};

/**
 * --------------------------- Activate keyset
 */
export const activateKeyset = <ThrowOnError extends boolean = false>(options: Options<ActivateKeysetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ActivateKeysetResponse, unknown, ThrowOnError>({
        url: '/v1/admin/keys/activate',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};


/**
  * --------------------------- Balance Check
*/

export const debitBalance = <ThrowOnError extends boolean = false>(options: Options<DebitData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ECashBalance, unknown, ThrowOnError>({
        url: '/v1/admin/balance/debit',
        ...options
    });
};

export const creditBalance = <ThrowOnError extends boolean = false>(options: Options<CreditData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ECashBalance, unknown, ThrowOnError>({
        url: '/v1/admin/balance/credit',
        ...options
    });
};

export const onchainBalance = <ThrowOnError extends boolean = false>(options: Options<OnChainData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<OnChainBalanceData, unknown, ThrowOnError>({
        url: '/v1/admin/onchain/balance',
        ...options
    });
};

/**
  * --------------------------- KeySetInfo
*/


export const keysetInfo = <ThrowOnError extends boolean = false>(options: Options<KeysetInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<KeySetInfo, unknown, ThrowOnError>({
        url: '/v1/admin/keysets/{keyset_id}',
        ...options
    });
};
